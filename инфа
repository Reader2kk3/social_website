#1
• создание представления входа в систему;
• использование встроенного в Django фреймворка аутентификации;
• создание шаблонов представлений входа в систему и выхода из системы, смены и сброса пароля;
• расширение модели пользователя с помощью конкретно-прикладной модели профиля;
• создание представлений регистрации пользователей;
• конфигурирование проекта под закачивание медиафайлов на сайт;
• использование фреймворка сообщений;
• разработка конкретно-прикладного бэкенда аутентификации;
• запрет на использование пользователями существующей электронной почты.

#2
В этом проекте нам потребуется разработать следующие элементы:
• система аутентификации, позволяющая пользователям регистрироваться, входить в систему, редактировать свой профиль, менять или сбрасывать пароль;
• система подписки, позволяющая пользователям подписываться друг на друга на сайте;
• функциональность отображения выложенных изображений и система, позволяющая пользователям делиться изображениями с любого веб-сайта;
• поток активности, который позволяет пользователям видеть контент, закачанный на сайт людьми, на которых они подписаны.

#3
• добавление социальной аутентификации с помощью модуля Python Social Auth;
• установка пакета расширений Django Extensions;
• запуск сервера разработки по HTTPS;
• добавление аутентификации с учетной записью Facebook;
• добавление аутентификации с учетной записью Twitter;
• добавление аутентификации с учетной записью Google;
• создание профиля для пользователей, которые регистрируются с помощью социальной аутентификации.

#4
• создание взаимосвязей многие-ко-многим;
• адаптация поведения форм под конкретно-прикладную задачу;
• использование JavaScript вместе с Django;
• формирование букмарклета JavaScript;
• генерирование миниатюр изображений с помощью easy-thumbnails;
• реализация асинхронных HTTP-запросов с по мощью JavaScript и Django;
• разработка бесконечной постраничной прокрутки.

#5
• разработка системы подписки;
• создание взаимосвязей многие-ко-многим с промежуточной моделью;
• создание приложения потока активности;
• добавление обобщенных отношений в модели;
• оптимизация наборов запросов для связанных объектов;
• использование сигналов для денормализации количественных данных;
• использование меню отладочных инструментов Django Debug Toolbar для получения соответствующей отладочной информации;
• ведение подсчета просмотров изображений с помощью хранилища Redis;
• создание рейтинга самых просматриваемых изображений с помощью хранилища Redis.
